import Head from "next/head";
import React, { useEffect } from "react";
import DebugNavbar from "src/components/debug/DebugNavbar";
import { useAppDispatch } from "src/hooks/redux";
import {
  type Mode,
  reset,
  stateShema,
  mount,
  initialize,
  switchMode,
} from "src/store/metaSlice";

interface LayoutProps {
  children: React.ReactNode;
}

export default function DebugLayout({ children }: LayoutProps) {
  const dispatch = useAppDispatch();

  useEffect(() => {
    initialization(dispatch);
    dispatch(mount());
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  return (
    <>
      <Head>
        <title>debug</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <DebugNavbar />
      <main className="px-2">{children}</main>
    </>
  );
}

function initialization(dispatch: ReturnType<typeof useAppDispatch>) {
  //meta
  initState("unlimited", dispatch);
  // Mode
  dispatch(switchMode("unlimited"));
  // seed
}

function initState(mode: Mode, dispatch: ReturnType<typeof useAppDispatch>) {
  const stateRaw = localStorage.getItem(mode);
  if (stateRaw !== null) {
    const stateJson: unknown = JSON.parse(stateRaw);
    const parsed = stateShema.safeParse(stateJson);
    if (parsed.success) {
      dispatch(initialize({ mode: mode, state: parsed.data }));
    } else {
      dispatch(reset(mode));
    }
  } else {
    dispatch(reset(mode));
  }
}
